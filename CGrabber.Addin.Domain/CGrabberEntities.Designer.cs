//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace CGrabber.Addin.Domain
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CGrabberDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CGrabberDBEntities object using the connection string found in the 'CGrabberDBEntities' section of the application configuration file.
        /// </summary>
        public CGrabberDBEntities() : base("name=CGrabberDBEntities", "CGrabberDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CGrabberDBEntities object.
        /// </summary>
        public CGrabberDBEntities(string connectionString) : base(connectionString, "CGrabberDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CGrabberDBEntities object.
        /// </summary>
        public CGrabberDBEntities(EntityConnection connection) : base(connection, "CGrabberDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GrabberRuleset> GrabberRulesets
        {
            get
            {
                if ((_GrabberRulesets == null))
                {
                    _GrabberRulesets = base.CreateObjectSet<GrabberRuleset>("GrabberRulesets");
                }
                return _GrabberRulesets;
            }
        }
        private ObjectSet<GrabberRuleset> _GrabberRulesets;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GrabberRulesets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGrabberRulesets(GrabberRuleset grabberRuleset)
        {
            base.AddObject("GrabberRulesets", grabberRuleset);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CGrabberDBModel", Name="GrabberRuleset")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GrabberRuleset : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GrabberRuleset object.
        /// </summary>
        /// <param name="rulesetId">Initial value of the RulesetId property.</param>
        /// <param name="rulesetName">Initial value of the RulesetName property.</param>
        /// <param name="rulesetKeyword">Initial value of the RulesetKeyword property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static GrabberRuleset CreateGrabberRuleset(global::System.Guid rulesetId, global::System.String rulesetName, global::System.String rulesetKeyword, global::System.Boolean isActive, global::System.DateTime createdDate)
        {
            GrabberRuleset grabberRuleset = new GrabberRuleset();
            grabberRuleset.RulesetId = rulesetId;
            grabberRuleset.RulesetName = rulesetName;
            grabberRuleset.RulesetKeyword = rulesetKeyword;
            grabberRuleset.IsActive = isActive;
            grabberRuleset.CreatedDate = createdDate;
            return grabberRuleset;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RulesetId
        {
            get
            {
                return _RulesetId;
            }
            set
            {
                if (_RulesetId != value)
                {
                    OnRulesetIdChanging(value);
                    ReportPropertyChanging("RulesetId");
                    _RulesetId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RulesetId");
                    OnRulesetIdChanged();
                }
            }
        }
        private global::System.Guid _RulesetId;
        partial void OnRulesetIdChanging(global::System.Guid value);
        partial void OnRulesetIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RulesetName
        {
            get
            {
                return _RulesetName;
            }
            set
            {
                OnRulesetNameChanging(value);
                ReportPropertyChanging("RulesetName");
                _RulesetName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RulesetName");
                OnRulesetNameChanged();
            }
        }
        private global::System.String _RulesetName;
        partial void OnRulesetNameChanging(global::System.String value);
        partial void OnRulesetNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RulesetKeyword
        {
            get
            {
                return _RulesetKeyword;
            }
            set
            {
                OnRulesetKeywordChanging(value);
                ReportPropertyChanging("RulesetKeyword");
                _RulesetKeyword = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RulesetKeyword");
                OnRulesetKeywordChanged();
            }
        }
        private global::System.String _RulesetKeyword;
        partial void OnRulesetKeywordChanging(global::System.String value);
        partial void OnRulesetKeywordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();

        #endregion
    
    }

    #endregion
    
}
